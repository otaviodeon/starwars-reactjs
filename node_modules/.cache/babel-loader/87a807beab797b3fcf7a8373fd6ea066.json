{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/otavio/projects/starwars-reactjs/starwars/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst People = ({\n  people,\n  onSelectCharacter\n}) => {\n  if (people.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), people.results.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onSelectCharacter(character.name, character.url),\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  } else return null;\n}; //function PaginatorButton(props) {\n\n\n_c = People;\n\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.props.onChangePage(this.props.url),\n      children: direction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n} //const Paginator = ({people}) => {\n\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectCharacter = (name, url) => {\n      this.props.onSelectCharacter(name, url);\n    };\n  }\n\n  render() {\n    const data = this.props.people;\n    const previous = data.previous ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.previous,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }, this) : \"\";\n    const next = data.next ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.next,\n      next: 1,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 30\n    }, this) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(People, {\n        people: data,\n        onSelectCharacter: this.handleSelectCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), previous, next]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n  } // render() {\n  //   return (\n  //     {a}\n  //   );\n  // }\n\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [],\n      characterSelected: null,\n      url: null\n    };\n\n    this.handleChangePage = url => {\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState({\n          people: data\n        });\n      }).catch(console.log);\n    };\n\n    this.handleSelectCharacter = (name, url) => {\n      this.setState({\n        characterSelected: name,\n        url: url\n      });\n      alert(name);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/').then(res => res.json()).then(data => {\n      this.setState({\n        people: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Paginator, {\n      people: this.state.people,\n      onChangePage: this.handleChangePage,\n      onSelectCharacter: this.handleSelectCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this) //{this.state.personSelected}\n    ;\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["/home/otavio/projects/starwars-reactjs/starwars/src/App.js"],"names":["React","Component","People","people","onSelectCharacter","results","map","character","name","url","PaginatorButton","render","direction","props","next","onChangePage","Paginator","constructor","handleSelectCharacter","data","previous","Character","App","state","characterSelected","handleChangePage","fetch","then","res","json","setState","catch","console","log","alert","componentDidMount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst People = ({people, onSelectCharacter}) => {\n  if (people.results) {\n    return (\n        <div>\n            <center><h1>Contact List</h1></center>\n            {people.results.map((character) => (\n                <div onClick={() => onSelectCharacter(character.name, character.url)}>\n                    <h5>{character.name}</h5>\n                </div>\n            ))}\n        </div>\n    )\n  } else return null;\n};\n\n//function PaginatorButton(props) {\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n\n    return (\n      <button onClick={() => this.props.onChangePage(this.props.url)}> \n        {direction} \n      </button>\n    );\n  }\n}\n\n//const Paginator = ({people}) => {\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleSelectCharacter= (name, url) => {\n    this.props.onSelectCharacter(name, url);\n  }\n\n  render() {\n    const data = this.props.people;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n\n    return (\n      <div>\n        <People people={data} onSelectCharacter={this.handleSelectCharacter} />\n        {previous}\n        {next}\n      </div>\n    );\n  }\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // render() {\n  //   return (\n  //     {a}\n  //   );\n  // }\n\n}\n\nclass App extends Component {\n  state = {\n      people: [],\n      characterSelected: null,\n      url: null\n  }\n  \n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleChangePage = (url) => {\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleSelectCharacter = (name, url) => {\n    this.setState({\n      characterSelected: name,\n      url: url\n    });\n    alert(name);\n  }\n\n  render() {\n    return (\n      <Paginator people={this.state.people} onChangePage={this.handleChangePage} onSelectCharacter={this.handleSelectCharacter}/>\n      //{this.state.personSelected}\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}