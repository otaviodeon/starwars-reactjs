{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/otavio/projects/starwars-reactjs/starwars/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Person = ({\n  name,\n  selected,\n  onclickhandler\n}) => {\n  const clickHandler = name => {\n    onclickhandler(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character\" + (selected ? \"character-selected\" : \"\"),\n    onClick: clickHandler({\n      name\n    }),\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Person;\n\nconst People = ({\n  people,\n  selected,\n  onSelectCharacter\n}) => {\n  //alert(selected);\n  if (people.results) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: people.results.map(character => /*#__PURE__*/_jsxDEV(Person, {\n        name: character.name,\n        selected: character.name === selected ? true : false,\n        onclick: onSelectCharacter\n      }, character.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  } else return null;\n}; //function PaginatorButton(props) {\n\n\n_c2 = People;\n\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-paginator\",\n      onClick: () => this.props.onChangePage(this.props.url),\n      children: direction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectCharacter = (name, url) => {\n      alert(213);\n      console.log(name); //this.props.onSelectCharacter(name, url);\n    };\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.previous,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 38\n    }, this) : \"\";\n    const next = data.next ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.next,\n      next: 1,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }, this) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginator\",\n      children: [/*#__PURE__*/_jsxDEV(People, {\n        people: data,\n        selected: character,\n        onSelectCharacter: this.handleSelectCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginator-buttons\",\n        children: [previous, next]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n  } // render() {\n  //   return (\n  //     {a}\n  //   );\n  // }\n\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [],\n      characterSelected: null,\n      url: null\n    };\n\n    this.handleChangePage = url => {\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState({\n          people: data\n        });\n      }).catch(console.log);\n    };\n\n    this.handleSelectCharacter = (name, url) => {\n      this.setState({\n        characterSelected: name,\n        url: url\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/').then(res => res.json()).then(data => {\n      this.setState({\n        people: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"STAR FOLKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Click on someone to see more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paginator, {\n        people: this.state.people,\n        characterSelected: this.state.characterSelected,\n        onChangePage: this.handleChangePage,\n        onSelectCharacter: this.handleSelectCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"People\");","map":{"version":3,"sources":["/home/otavio/projects/starwars-reactjs/starwars/src/App.js"],"names":["React","Component","Person","name","selected","onclickhandler","clickHandler","People","people","onSelectCharacter","results","map","character","PaginatorButton","render","direction","props","next","onChangePage","url","Paginator","constructor","handleSelectCharacter","alert","console","log","data","characterSelected","previous","Character","App","state","handleChangePage","fetch","then","res","json","setState","catch","componentDidMount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Person = ({name, selected, onclickhandler}) => {\n  const clickHandler = (name) => {\n    onclickhandler(name);\n  }\n\n  return (\n    <div className={\"character\" + (selected ? \"character-selected\" : \"\")} onClick={clickHandler({name})}>\n      {name}\n    </div>\n  );\n}\n\nconst People = ({people, selected, onSelectCharacter}) => {\n  //alert(selected);\n  if (people.results) {\n    return (\n        <React.Fragment>\n            {people.results.map((character) => (\n                <Person key={character.name} name={character.name} selected={character.name === selected ? true : false} onclick={onSelectCharacter} />\n            ))}\n        </React.Fragment>\n    )\n  } else return null;\n};\n\n//function PaginatorButton(props) {\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n\n    return (\n      <button className=\"button-paginator\" onClick={() => this.props.onChangePage(this.props.url)}> \n        {direction} \n      </button>\n    );\n  }\n}\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleSelectCharacter= (name, url) => {\n    alert(213);\n    console.log(name);\n    //this.props.onSelectCharacter(name, url);\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n\n    return (\n      <div className=\"paginator\">\n        <People people={data} selected={character} onSelectCharacter={this.handleSelectCharacter} />\n        \n        <div className=\"paginator-buttons\">\n          {previous}\n          {next}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // render() {\n  //   return (\n  //     {a}\n  //   );\n  // }\n\n}\n\nclass App extends Component {\n  state = {\n      people: [],\n      characterSelected: null,\n      url: null\n  }\n  \n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleChangePage = (url) => {\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleSelectCharacter = (name, url) => {\n    this.setState({\n      characterSelected: name,\n      url: url\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>STAR FOLKS</h1>\n        <h3>Click on someone to see more</h3>\n\n        <Paginator people={this.state.people} characterSelected={this.state.characterSelected} onChangePage={this.handleChangePage} onSelectCharacter={this.handleSelectCharacter}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}