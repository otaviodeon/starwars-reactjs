{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/otavio/projects/starwars-reactjs/starwars/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"STAR FOLKS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Click on someone to see more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Person = ({\n  name,\n  url,\n  selected,\n  onclickhandler\n}) => {\n  return (\n    /*#__PURE__*/\n    // <div className={\"character \" + (selected ? \"character-selected\" : \"\")} onClick={() => onclickhandler(name, url)}>\n    _jsxDEV(\"div\", {\n      className: \"character \" + (selected ? \"character-selected\" : \"\"),\n      onClick: () => onclickhandler(name, url),\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c2 = Person;\n\nconst People = ({\n  people,\n  selected,\n  onSelectCharacter\n}) => {\n  if (people.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: people.results.map(character => /*#__PURE__*/_jsxDEV(Person, {\n        name: character.name,\n        url: character.url,\n        selected: character.name === selected ? true : false,\n        onclickhandler: onSelectCharacter\n      }, character.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  } else return null;\n}; //class PaginatorButton extends Component {\n\n\n_c3 = People;\n\nfunction PaginatorButton(props) {\n  const direction = props.next ? '>' : '<';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button-paginator\",\n    onClick: () => props.onChangePage(props.url),\n    children: direction\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_c4 = PaginatorButton;\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectCharacter = (name, url) => {\n      this.props.onSelectCharacter(name, url);\n    };\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.previous,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 38\n    }, this) : \"\";\n    const next = data.next ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.next,\n      next: 1,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }, this) : \"\";\n    const content = this.props.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(People, {\n      people: data,\n      selected: character,\n      onSelectCharacter: this.handleSelectCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 70\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginator\",\n      children: [content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginator-buttons\",\n        children: [previous, next]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst CloseButton = ({\n  onclickhandler\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-close\",\n    onClick: onclickhandler,\n    children: \"Close\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = CloseButton;\n\nconst CharacterHeader = ({\n  name,\n  height,\n  mass\n}) => {\n  const mass_str = mass === \"unknown\" ? \"unknown weight\" : mass + \"kg\";\n  const height_str = height === \"unknown\" ? \"unknown height\" : height + \"cm\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-header\",\n    children: [name, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [height_str, \", \", mass_str]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = CharacterHeader;\n\nconst Film = ({\n  title,\n  onclickhandler\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button\",\n    onClick: () => onclickhandler(title),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Film;\n\nconst CharacterBody = ({\n  data,\n  onclickhandler\n}) => {\n  /*{data.films.map((film) => (\n      let title = \"\";\n      <button className=\"button\" onClick={() => onclickhandler(film)}>{title}</button>\n  ))}*/\n  const film_buttons = data.films.map(film => {\n    return /*#__PURE__*/_jsxDEV(Film, {\n      title: \"test\",\n      onclickhandler: onclickhandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), \" \", data.skin_color, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), \" \", data.hair_color, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Eyes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), \" \", data.eye_color, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), \" \", film_buttons]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_c8 = CharacterBody;\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      character: null,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch(this.props.url).then(res => res.json()).then(data => {\n      this.setState({\n        character: data,\n        loading: false\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    /*this.setState({\n      loading: true\n    })*/\n    if (prevState.character !== this.state.character) {\n      fetch(this.props.url).then(res => res.json()).then(data => {\n        this.setState({\n          character: data,\n          loading: false\n        });\n      });\n    }\n  }\n\n  handleClickFilms(url) {\n    alert(url);\n    /*fetch(this.props.url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          films: data\n        })\n      })*/\n  }\n\n  render() {\n    const data = this.state.character;\n    /*if (this.state.character) {\n      return (\n        <div className=\"more\">\n          <CharacterHeader name={data.name} height={data.height} mass={data.mass} />\n           <CloseButton onclickhandler={this.props.onClose} />\n        </div>\n      );\n    } else return null;*/\n    // if (this.state.loading) {\n    //   return (\n    //     <div className=\"more\"> \n    //       <div className=\"loader\"/>\n    //     </div>\n    //   );\n    // }\n\n    if (data) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more\",\n        children: [/*#__PURE__*/_jsxDEV(CharacterHeader, {\n          name: data.name,\n          height: data.height,\n          mass: data.mass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CharacterBody, {\n          data: data,\n          onclickhandler: this.handleClickFilms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onclickhandler: this.props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this);\n    } else return null; //} else return <div className=\"loader\" />;\n\n  }\n\n}\n/*function fetch (url) {\n  fetch(url)\n    .then(res => res.json())\n    .then((data) => {\n      return data;\n    })\n}*/\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePage = url => {\n      this.setState({\n        loading: true\n      });\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState({\n          people: data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleSelectCharacter = (name, url) => {\n      this.setState({\n        selected: [name, url]\n      });\n    };\n\n    this.handleCloseCharacter = () => {\n      this.setState({\n        selected: [null, null]\n      });\n    };\n\n    this.state = {\n      people: [],\n      selected: [null, null],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/').then(res => res.json()).then(data => {\n      this.setState({\n        people: data,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(Paginator, {\n          loading: this.state.loading,\n          people: this.state.people,\n          characterSelected: this.state.selected[0],\n          onChangePage: this.handleChangePage,\n          onSelectCharacter: this.handleSelectCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), this.state.selected[1] && /*#__PURE__*/_jsxDEV(Character, {\n          url: this.state.selected[1],\n          onClose: this.handleCloseCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Person\");\n$RefreshReg$(_c3, \"People\");\n$RefreshReg$(_c4, \"PaginatorButton\");\n$RefreshReg$(_c5, \"CloseButton\");\n$RefreshReg$(_c6, \"CharacterHeader\");\n$RefreshReg$(_c7, \"Film\");\n$RefreshReg$(_c8, \"CharacterBody\");","map":{"version":3,"sources":["/home/otavio/projects/starwars-reactjs/starwars/src/App.js"],"names":["React","Component","Header","Person","name","url","selected","onclickhandler","People","people","onSelectCharacter","results","map","character","PaginatorButton","props","direction","next","onChangePage","Paginator","constructor","handleSelectCharacter","render","data","characterSelected","previous","content","loading","CloseButton","CharacterHeader","height","mass","mass_str","height_str","Film","title","CharacterBody","film_buttons","films","film","skin_color","hair_color","eye_color","Character","state","componentDidMount","setState","fetch","then","res","json","componentDidUpdate","prevProps","prevState","handleClickFilms","alert","onClose","App","handleChangePage","handleCloseCharacter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nconst Header = () => {\n  return (\n    <div>\n      <h1>STAR FOLKS</h1>\n      <h3>Click on someone to see more</h3>\n    </div>\n  );\n}\n\nconst Person = ({name, url, selected, onclickhandler}) => {\n  return (\n    // <div className={\"character \" + (selected ? \"character-selected\" : \"\")} onClick={() => onclickhandler(name, url)}>\n    <div className={\"character \" + (selected ? \"character-selected\" : \"\")} onClick={() => onclickhandler(name, url)}>\n      {name}\n    </div>\n  );\n}\n\nconst People = ({people, selected, onSelectCharacter}) => {\n  if (people.results) {\n    return (\n        <div>\n            {people.results.map((character) => (\n                <Person key={character.name} name={character.name} url={character.url} selected={character.name === selected ? true : false} onclickhandler={onSelectCharacter} />\n            ))}\n        </div>\n    )\n  } else return null;\n};\n\n//class PaginatorButton extends Component {\nfunction PaginatorButton(props) {\n    const direction = props.next ? '>' : '<';\n\n    return (\n      <button className=\"button-paginator\" onClick={() => props.onChangePage(props.url)}> \n        {direction} \n      </button>\n    );  \n}\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleSelectCharacter= (name, url) => {\n    this.props.onSelectCharacter(name, url);\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n\n    const content = this.props.loading ? <div className=\"loader\"/> : <People people={data} selected={character} onSelectCharacter={this.handleSelectCharacter} />;\n\n    return (\n      <div className=\"paginator\">\n        {content}\n        \n        <div className=\"paginator-buttons\">\n          {previous}\n          {next}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CloseButton = ({onclickhandler}) => {\n  return (\n    <div className={\"button-close\"} onClick={onclickhandler}>\n      Close\n    </div>\n  );\n}\n\nconst CharacterHeader = ({name, height, mass}) => {\n  const mass_str = mass === \"unknown\" ? \"unknown weight\" : mass + \"kg\"\n  const height_str = height === \"unknown\" ? \"unknown height\" : height + \"cm\"\n\n  return (\n    <div className=\"character-header\">\n      {name}\n      <div>\n        {height_str}, {mass_str}\n      </div>\n    </div>\n  );\n}\n\nconst Film = ({title, onclickhandler}) => {\n  return (\n    <button className=\"button\" onClick={() => onclickhandler(title)}>{title}</button>\n  );\n}\n\nconst CharacterBody = ({data, onclickhandler}) => {\n  /*{data.films.map((film) => (\n      let title = \"\";\n      <button className=\"button\" onClick={() => onclickhandler(film)}>{title}</button>\n  ))}*/\n\n  const film_buttons = data.films.map((film) => {\n    return (\n      \n        <Film title=\"test\" onclickhandler={onclickhandler} />\n\n    );\n  });\n\n  return (\n    <div className=\"character-body\">\n      <p>Skin</p> {data.skin_color}\n      <p>Hair</p> {data.hair_color}\n      <p>Eyes</p> {data.eye_color}\n      \n      <p>Films</p> {film_buttons}\n    </div>\n  );\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      character: null,\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    })\n\n    fetch(this.props.url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          character: data,\n          loading: false\n        })\n      })\n  }\n  componentDidUpdate(prevProps, prevState) {\n    /*this.setState({\n      loading: true\n    })*/\n\n    if (prevState.character !== this.state.character) {\n      fetch(this.props.url)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({\n            character: data,\n            loading: false\n          })\n        })\n    }\n  }\n\n  handleClickFilms(url) {\n    alert(url);\n    /*fetch(this.props.url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          films: data\n        })\n      })*/\n  }\n\n  render() {\n    const data = this.state.character;\n\n    /*if (this.state.character) {\n      return (\n        <div className=\"more\">\n          <CharacterHeader name={data.name} height={data.height} mass={data.mass} />\n\n          <CloseButton onclickhandler={this.props.onClose} />\n        </div>\n      );\n    } else return null;*/\n\n    // if (this.state.loading) {\n    //   return (\n    //     <div className=\"more\"> \n    //       <div className=\"loader\"/>\n    //     </div>\n    //   );\n    // }\n    if (data) {\n      return (\n        <div className=\"more\"> \n          <CharacterHeader name={data.name} height={data.height} mass={data.mass} />\n          <CharacterBody data={data} onclickhandler={this.handleClickFilms}/>\n\n          <CloseButton onclickhandler={this.props.onClose} />\n        </div>\n      );\n    }\n    else return null;\n    //} else return <div className=\"loader\" />;\n  }\n\n}\n\n/*function fetch (url) {\n  fetch(url)\n    .then(res => res.json())\n    .then((data) => {\n      return data;\n    })\n}*/\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        people: [],\n        selected: [null, null],\n        loading: true\n    }\n  }\n  \n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ \n          people: data,\n          loading: false\n        })\n      })\n  }\n\n  handleChangePage = (url) => {\n    this.setState({\n      loading: true\n    });\n\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ \n          people: data,\n          loading: false\n        })\n      })\n  }\n\n  handleSelectCharacter = (name, url) => {\n    this.setState({\n      selected: [name, url]\n    });\n  }\n\n  handleCloseCharacter = () => {\n    this.setState({\n      selected: [null, null]\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n\n        <div className=\"flex-container\">\n          <Paginator loading={this.state.loading} people={this.state.people} characterSelected={this.state.selected[0]} onChangePage={this.handleChangePage} onSelectCharacter={this.handleSelectCharacter} />\n\n          {this.state.selected[1] && \n            <Character url={this.state.selected[1]} onClose={this.handleCloseCharacter} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}