{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/otavio/projects/starwars-reactjs/starwars/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst People = ({\n  people\n}) => {\n  if (people.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), people.results.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  } else return null;\n}; //function PaginatorButton(props) {\n\n\n_c = People;\n\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.props.onChangePage(this.props.url),\n      children: direction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n} //const Paginator = ({people}) => {\n\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n  }\n  /*changePage() {\n    alert(1);\n  }*/\n\n\n  render() {\n    const data = this.props.people;\n    const previous = data.previous ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.previous,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }, this) : \"\";\n    const next = data.next ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.next,\n      next: 1,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 30\n    }, this) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(People, {\n        people: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), previous, next]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: []\n    };\n\n    this.handleChangePage = url => {\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState({\n          people: data\n        });\n      }).catch(console.log);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/').then(res => res.json()).then(data => {\n      this.setState({\n        people: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Paginator, {\n      people: this.state.people,\n      onChangePage: this.handleChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["/home/otavio/projects/starwars-reactjs/starwars/src/App.js"],"names":["React","Component","People","people","results","map","character","name","PaginatorButton","render","direction","props","next","onChangePage","url","Paginator","constructor","data","previous","App","state","handleChangePage","fetch","then","res","json","setState","catch","console","log","componentDidMount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst People = ({people}) => {\n  if (people.results) {\n    return (\n        <div>\n            <center><h1>Contact List</h1></center>\n            {people.results.map((character) => (\n                <div class=\"card\">\n                    <h5>{character.name}</h5>\n                </div>\n            ))}\n        </div>\n    )\n  } else return null;\n};\n\n//function PaginatorButton(props) {\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n\n    return (\n      <button onClick={() => this.props.onChangePage(this.props.url)}> \n        {direction} \n      </button>\n    );\n  }\n}\n\n//const Paginator = ({people}) => {\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  /*changePage() {\n    alert(1);\n  }*/\n\n  render() {\n    const data = this.props.people;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n\n    return (\n      <div>\n        <People people={data} />\n        {previous}\n        {next}\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  state = {\n      people: []\n    }\n  \n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ people: data })\n    })\n    .catch(console.log)\n  }\n\n  handleChangePage = (url) => {\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  render() {\n    return (\n      <Paginator people={this.state.people} onChangePage={this.handleChangePage}/>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}