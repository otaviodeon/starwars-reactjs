{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/otavio/projects/starwars-reactjs/starwars/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Person = ({\n  name,\n  selected,\n  onclick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character\" + (selected ? \"character-selected\" : \"\"),\n    onClick: onClick,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Person;\n\nconst People = ({\n  people,\n  selected,\n  onSelectCharacter\n}) => {\n  //alert(selected);\n  if (people.results) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: people.results.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Person, {\n          name: character.name,\n          selected: character.name === selected ? true : false,\n          onClick: () => onSelectCharacter(character.name, character.url)\n        }, character.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  } else return null;\n}; //function PaginatorButton(props) {\n\n\n_c2 = People;\n\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.props.onChangePage(this.props.url),\n      children: direction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n} //const Paginator = ({people}) => {\n\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectCharacter = (name, url) => {\n      alert(name);\n      this.props.onSelectCharacter(name, url);\n    };\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.previous,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 38\n    }, this) : \"\";\n    const next = data.next ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.next,\n      next: 1,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 30\n    }, this) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(People, {\n        people: data,\n        selected: character,\n        onSelectCharacter: this.handleSelectCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), previous, next]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n  } // render() {\n  //   return (\n  //     {a}\n  //   );\n  // }\n\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [],\n      characterSelected: null,\n      url: null\n    };\n\n    this.handleChangePage = url => {\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState({\n          people: data\n        });\n      }).catch(console.log);\n    };\n\n    this.handleSelectCharacter = (name, url) => {\n      this.setState({\n        characterSelected: name,\n        url: url\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/').then(res => res.json()).then(data => {\n      this.setState({\n        people: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Paginator, {\n      people: this.state.people,\n      characterSelected: this.state.characterSelected,\n      onChangePage: this.handleChangePage,\n      onSelectCharacter: this.handleSelectCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this) //{this.state.personSelected}\n    ;\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"People\");","map":{"version":3,"sources":["/home/otavio/projects/starwars-reactjs/starwars/src/App.js"],"names":["React","Component","Person","name","selected","onclick","onClick","People","people","onSelectCharacter","results","map","character","url","PaginatorButton","render","direction","props","next","onChangePage","Paginator","constructor","handleSelectCharacter","alert","data","characterSelected","previous","Character","App","state","handleChangePage","fetch","then","res","json","setState","catch","console","log","componentDidMount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Person = ({name, selected, onclick}) => {\n  return (\n    <div className={\"character\" + (selected ? \"character-selected\" : \"\")} onClick={onClick}>\n      {name}\n    </div>\n  );\n}\n\nconst People = ({people, selected, onSelectCharacter}) => {\n  //alert(selected);\n  if (people.results) {\n    return (\n        <React.Fragment>\n            {people.results.map((character) => (\n              <div>\n                <Person key={character.name} name={character.name} selected={character.name === selected ? true : false} onClick={() => onSelectCharacter(character.name, character.url)}/>\n              </div>\n            ))}\n        </React.Fragment>\n    )\n  } else return null;\n};\n\n//function PaginatorButton(props) {\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n\n    return (\n      <button onClick={() => this.props.onChangePage(this.props.url)}> \n        {direction} \n      </button>\n    );\n  }\n}\n\n//const Paginator = ({people}) => {\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleSelectCharacter= (name, url) => {\n    alert(name);\n    this.props.onSelectCharacter(name, url);\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n\n    return (\n      <div>\n        <People people={data} selected={character} onSelectCharacter={this.handleSelectCharacter} />\n        {previous}\n        {next}\n      </div>\n    );\n  }\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // render() {\n  //   return (\n  //     {a}\n  //   );\n  // }\n\n}\n\nclass App extends Component {\n  state = {\n      people: [],\n      characterSelected: null,\n      url: null\n  }\n  \n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleChangePage = (url) => {\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleSelectCharacter = (name, url) => {\n    this.setState({\n      characterSelected: name,\n      url: url\n    });\n  }\n\n  render() {\n    return (\n      <Paginator people={this.state.people} characterSelected={this.state.characterSelected} onChangePage={this.handleChangePage} onSelectCharacter={this.handleSelectCharacter}/>\n      //{this.state.personSelected}\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}