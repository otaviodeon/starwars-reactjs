{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/otavio/projects/starwars-reactjs/starwars/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst People = ({\n  people,\n  onShowCharacter\n}) => {\n  if (people.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), people.results.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onShowCharacter(character.url),\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  } else return null;\n}; //function PaginatorButton(props) {\n\n\n_c = People;\n\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.props.onChangePage(this.props.url),\n      children: direction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Paginator = ({\n  people\n}) => {\n  return /*#__PURE__*/_jsxDEV(People, {\n    people: data,\n    onShowCharacter: this.showCharacter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this); //class Paginator extends Component {\n\n  /*constructor(props) {\n    super(props);\n  }\n   showCharacter(url) {\n    alert(url);\n  }\n   render() {\n    const data = this.props.people;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n     return (\n      <div>\n        <People people={data} onShowCharacter={this.showCharacter} />\n        {previous}\n        {next}\n      </div>\n    );\n  }*/\n};\n\n_c2 = Paginator;\n\nclass Person extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [],\n      personSelected: null\n    };\n\n    this.handleChangePage = url => {\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState({\n          people: data\n        });\n      }).catch(console.log);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/').then(res => res.json()).then(data => {\n      this.setState({\n        people: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Paginator, {\n      people: this.state.people,\n      onChangePage: this.handleChangePage,\n      onSelectPerson: this.handleSelectPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this) //{this.state.personSelected}\n    ;\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"People\");\n$RefreshReg$(_c2, \"Paginator\");","map":{"version":3,"sources":["/home/otavio/projects/starwars-reactjs/starwars/src/App.js"],"names":["React","Component","People","people","onShowCharacter","results","map","character","url","name","PaginatorButton","render","direction","props","next","onChangePage","Paginator","data","showCharacter","Person","constructor","App","state","personSelected","handleChangePage","fetch","then","res","json","setState","catch","console","log","componentDidMount","handleSelectPerson"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst People = ({people, onShowCharacter}) => {\n  if (people.results) {\n    return (\n        <div>\n            <center><h1>Contact List</h1></center>\n            {people.results.map((character) => (\n                <div onClick={() => onShowCharacter(character.url)}>\n                    <h5>{character.name}</h5>\n                </div>\n            ))}\n        </div>\n    )\n  } else return null;\n};\n\n//function PaginatorButton(props) {\nclass PaginatorButton extends Component {\n  render() {\n    const direction = this.props.next ? '>' : '<';\n\n    return (\n      <button onClick={() => this.props.onChangePage(this.props.url)}> \n        {direction} \n      </button>\n    );\n  }\n}\n\nconst Paginator = ({people}) => {\n  return (\n    <People people={data} onShowCharacter={this.showCharacter} />\n    );\n//class Paginator extends Component {\n  /*constructor(props) {\n    super(props);\n  }\n\n  showCharacter(url) {\n    alert(url);\n  }\n\n  render() {\n    const data = this.props.people;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n\n    return (\n      <div>\n        <People people={data} onShowCharacter={this.showCharacter} />\n        {previous}\n        {next}\n      </div>\n    );\n  }*/\n}\n\nclass Person extends Component {\n  constructor(props) {\n    super(props);\n  }\n}\n\nclass App extends Component {\n  state = {\n      people: [],\n      personSelected: null\n  }\n  \n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ people: data })\n    })\n    .catch(console.log)\n  }\n\n  handleChangePage = (url) => {\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  render() {\n    return (\n      <Paginator people={this.state.people} onChangePage={this.handleChangePage} onSelectPerson={this.handleSelectPerson}/>\n      //{this.state.personSelected}\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}