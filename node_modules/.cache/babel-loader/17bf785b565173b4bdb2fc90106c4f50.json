{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/otavio/projects/starwars-reactjs/starwars/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"STAR FOLKS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Click on someone to see more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Person = ({\n  name,\n  url,\n  selected,\n  onclickhandler\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character \" + (selected ? \"character-selected\" : \"\"),\n    onClick: () => onclickhandler(name, url),\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Person;\n\nconst People = ({\n  people,\n  selected,\n  onSelectCharacter\n}) => {\n  if (people.results) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: people.results.map(character => /*#__PURE__*/_jsxDEV(Person, {\n        name: character.name,\n        url: character.url,\n        selected: character.name === selected ? true : false,\n        onclickhandler: onSelectCharacter\n      }, character.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  } else return null;\n}; //class PaginatorButton extends Component {\n\n\n_c3 = People;\n\nfunction PaginatorButton(props) {\n  const direction = props.next ? '>' : '<';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button-paginator\",\n    onClick: () => props.onChangePage(props.url),\n    children: direction\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_c4 = PaginatorButton;\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectCharacter = (name, url) => {\n      this.props.onSelectCharacter(name, url);\n    };\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.previous,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 38\n    }, this) : \"\";\n    const next = data.next ? /*#__PURE__*/_jsxDEV(PaginatorButton, {\n      url: data.next,\n      next: 1,\n      onChangePage: url => this.props.onChangePage(url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }, this) : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginator\",\n      children: [/*#__PURE__*/_jsxDEV(People, {\n        people: data,\n        selected: character,\n        onSelectCharacter: this.handleSelectCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginator-buttons\",\n        children: [previous, next]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst CharacterHeader = ({\n  name,\n  height,\n  mass\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-header\",\n    children: [height, \"cm, \", mass, \"kg\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = CharacterHeader;\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      character: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.url).then(res => res.json()).then(data => {\n      this.setState({\n        character: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const data = this.state.character; // if (this.state.character) {\n    //   return (<div className=\"more\">{this.state.character.height}</div>);\n    // } else return null;\n\n    if (this.state.character) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more\",\n        children: /*#__PURE__*/_jsxDEV(CharacterHeader, {\n          name: data.name,\n          height: data.height,\n          mass: data.mass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    } else return null;\n  }\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [],\n      selected: [null, null]\n    };\n\n    this.handleChangePage = url => {\n      fetch(url).then(res => res.json()).then(data => {\n        this.setState({\n          people: data\n        });\n      }).catch(console.log);\n    };\n\n    this.handleSelectCharacter = (name, url) => {\n      this.setState({\n        selected: [name, url]\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/').then(res => res.json()).then(data => {\n      this.setState({\n        people: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(Paginator, {\n          people: this.state.people,\n          characterSelected: this.state.selected[0],\n          onChangePage: this.handleChangePage,\n          onSelectCharacter: this.handleSelectCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), this.state.selected[1] && /*#__PURE__*/_jsxDEV(Character, {\n          url: this.state.selected[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Person\");\n$RefreshReg$(_c3, \"People\");\n$RefreshReg$(_c4, \"PaginatorButton\");\n$RefreshReg$(_c5, \"CharacterHeader\");","map":{"version":3,"sources":["/home/otavio/projects/starwars-reactjs/starwars/src/App.js"],"names":["React","Component","Header","Person","name","url","selected","onclickhandler","People","people","onSelectCharacter","results","map","character","PaginatorButton","props","direction","next","onChangePage","Paginator","constructor","handleSelectCharacter","render","data","characterSelected","previous","CharacterHeader","height","mass","Character","state","componentDidMount","fetch","then","res","json","setState","catch","console","log","App","handleChangePage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Header = () => {\n  return (\n    <div>\n      <h1>STAR FOLKS</h1>\n      <h3>Click on someone to see more</h3>\n    </div>\n  );\n}\n\nconst Person = ({name, url, selected, onclickhandler}) => {\n  return (\n    <div className={\"character \" + (selected ? \"character-selected\" : \"\")} onClick={() => onclickhandler(name, url)}>\n      {name}\n    </div>\n  );\n}\n\nconst People = ({people, selected, onSelectCharacter}) => {\n  if (people.results) {\n    return (\n        <React.Fragment>\n            {people.results.map((character) => (\n                <Person key={character.name} name={character.name} url={character.url} selected={character.name === selected ? true : false} onclickhandler={onSelectCharacter} />\n            ))}\n        </React.Fragment>\n    )\n  } else return null;\n};\n\n//class PaginatorButton extends Component {\nfunction PaginatorButton(props) {\n    const direction = props.next ? '>' : '<';\n\n    return (\n      <button className=\"button-paginator\" onClick={() => props.onChangePage(props.url)}> \n        {direction} \n      </button>\n    );  \n}\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleSelectCharacter= (name, url) => {\n    this.props.onSelectCharacter(name, url);\n  }\n\n  render() {\n    const data = this.props.people;\n    const character = this.props.characterSelected;\n    const previous = data.previous ? <PaginatorButton url={data.previous} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n    const next = data.next ? <PaginatorButton url={data.next} next={1} onChangePage={(url) => this.props.onChangePage(url)} /> : \"\";\n\n    return (\n      <div className=\"paginator\">\n        <People people={data} selected={character} onSelectCharacter={this.handleSelectCharacter} />\n        \n        <div className=\"paginator-buttons\">\n          {previous}\n          {next}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CharacterHeader = ({name, height, mass}) => {\n  return (\n    <div className=\"character-header\">\n      {height}cm, {mass}kg\n    </div>\n  );\n}\n\nclass Character extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      character: null\n    }\n  }\n\n  componentDidMount() {\n    fetch(this.props.url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({character: data })\n      })\n      .catch(console.log)\n  }\n\n  render() {\n    const data = this.state.character;\n\n    // if (this.state.character) {\n    //   return (<div className=\"more\">{this.state.character.height}</div>);\n    // } else return null;\n\n    if (this.state.character) {\n      return (\n        <div className=\"more\">\n          <CharacterHeader name={data.name} height={data.height} mass={data.mass} />\n        </div>\n      );\n    } else return null;\n  }\n\n}\n\nclass App extends Component {\n  state = {\n      people: [],\n      selected: [null, null]\n  }\n  \n  componentDidMount() {\n    fetch('http://swapi.dev/api/people/')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleChangePage = (url) => {\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ people: data })\n      })\n      .catch(console.log)\n  }\n\n  handleSelectCharacter = (name, url) => {\n    this.setState({\n      selected: [name, url]\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n\n        <div className=\"flex-container\">\n          <Paginator people={this.state.people} characterSelected={this.state.selected[0]} onChangePage={this.handleChangePage} onSelectCharacter={this.handleSelectCharacter} />\n        \n          {this.state.selected[1] && \n            <Character url={this.state.selected[1]} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}